{"ast":null,"code":"import _classCallCheck from\"/Users/swarnim/Desktop/boggle_app-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/swarnim/Desktop/boggle_app-master/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/swarnim/Desktop/boggle_app-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/swarnim/Desktop/boggle_app-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/swarnim/Desktop/boggle_app-master/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/swarnim/Desktop/boggle_app-master/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";var Boggle=/*#__PURE__*/function(_Component){_inherits(Boggle,_Component);function Boggle(props){var _this;_classCallCheck(this,Boggle);_this=_possibleConstructorReturn(this,_getPrototypeOf(Boggle).call(this,props));_this.state={show_grid:false,grid:[[\"T\",\"T\",\"N\",\"T\",\"D\"],[\"H\",\"N\",\"C\",\"P\",\"R\"],[\"I\",\"L\",\"A\",\"E\",\"E\"],[\"G\",\"L\",\"Z\",\"R\",\"E\"],[\"S\",\"R\",\"F\",\"O\",\"S\"]]};_this.handleSubmit=_this.handleSubmit.bind(_assertThisInitialized(_this));return _this;}_createClass(Boggle,[{key:\"PrintGrid\",value:function PrintGrid(){var grid=this.state.grid;return React.createElement(\"div\",null,React.createElement(\"div\",null,React.createElement(\"div\",null,React.createElement(\"button\",null,this.state.grid[0][0]),React.createElement(\"button\",null,this.state.grid[0][1]),React.createElement(\"button\",null,this.state.grid[0][2]),React.createElement(\"button\",null,this.state.grid[0][3]),React.createElement(\"button\",null,this.state.grid[0][4])),React.createElement(\"div\",null,React.createElement(\"button\",null,this.state.grid[1][0]),React.createElement(\"button\",null,this.state.grid[1][1]),React.createElement(\"button\",null,this.state.grid[1][2]),React.createElement(\"button\",null,this.state.grid[1][3]),React.createElement(\"button\",null,this.state.grid[1][4])),React.createElement(\"div\",null,React.createElement(\"button\",null,this.state.grid[2][0]),React.createElement(\"button\",null,this.state.grid[2][1]),React.createElement(\"button\",null,this.state.grid[2][2]),React.createElement(\"button\",null,this.state.grid[2][3]),React.createElement(\"button\",null,this.state.grid[2][4])),React.createElement(\"div\",null,React.createElement(\"button\",null,this.state.grid[3][0]),React.createElement(\"button\",null,this.state.grid[3][1]),React.createElement(\"button\",null,this.state.grid[3][2]),React.createElement(\"button\",null,this.state.grid[3][3]),React.createElement(\"button\",null,this.state.grid[3][4])),React.createElement(\"div\",null,React.createElement(\"button\",null,this.state.grid[4][0]),React.createElement(\"button\",null,this.state.grid[4][1]),React.createElement(\"button\",null,this.state.grid[4][2]),React.createElement(\"button\",null,this.state.grid[4][3]),React.createElement(\"button\",null,this.state.grid[4][4]))));}},{key:\"handleSubmit\",value:function handleSubmit(event){this.setState({show_grid:true});event.preventDefault();}},{key:\"render\",value:function render(){if(this.state.show_grid){return React.createElement(\"div\",null,React.createElement(\"div\",null,this.PrintGrid()),React.createElement(BoggleGame,null));}else{return React.createElement(\"div\",null,React.createElement(\"button\",{onClick:this.handleSubmit},\"Start\"));}}}]);return Boggle;}(Component);export default Boggle;var BoggleGame=/*#__PURE__*/function(_Component2){_inherits(BoggleGame,_Component2);function BoggleGame(props){var _this2;_classCallCheck(this,BoggleGame);_this2=_possibleConstructorReturn(this,_getPrototypeOf(BoggleGame).call(this,props));_this2.state={input_word:\"\",valid_words:[],all_valid_words:[\"ACE\",\"ACEROSE\",\"ACT\",\"AE\",\"AERO \",\"AL\",\"ALGIN\",\"ALL\",\"ALLS\",\"ALS\",\"AN\",\"ANI\",\"ANIL\",\"ANILS\",\"ANT\",\"ANTHILL\",\"ANTHILLS\",\"APE\",\"APER\",\"APERS\",\"APT\",\"AR\",\"ARE\",\"ARES\",\"ARF\",\"AROSE\",\"ARS\",\"ARSE\",\"AZO\",\"CALF\",\"CALL\",\"CALLS\",\"CAN\",\"CANT\",\"CANTHI\",\"CAP\",\"CAPE\",\"CAPER\",\"CAPERER\",\"CAPERERS\",\"CAPERS\",\"CAR\",\"CARE\",\"CAREER\",\"CARER\",\"CARES\",\"CARS\",\"CARSE\",\"CEE\",\"CEES\",\"CEP\",\"CEPE\",\"CERE\",\"CERES\",\"CERO\",\"CEROS\",\"CLAN\",\"CLAP\",\"CLAPT\",\"CLARO\",\"CLAROES\",\"CLAROS\",\"CLINAL\",\"DREAR\",\"DREARS\",\"DREE\",\"DREES\",\"EAR\",\"EARS\",\"EPACT\",\"EPEE\",\"EPEES\",\"ER\",\"ERA\",\"ERE\",\"ERECT\",\"EROS\",\"EROSE\",\"ERS\",\"ES\",\"FLAN\",\"FLAP\",\"FLARE\",\"FLARES\",\"FLINT\",\"FOE\",\"FOES\",\"FOR\",\"FORA\",\"FORE\",\"FORES\",\"FRAE\",\"FRANC\",\"FRAP\",\"FREE\",\"FREER\",\"FREES\",\"FRERE\",\"FRO\",\"FROE\",\"FROES\",\"FROZE\",\"GILL\",\"GILLS\",\"GIN\",\"GLACE\",\"GLANCE\",\"GLANCER\",\"GLANCERS\",\"GLARE\",\"GLARES\",\"GLAZE\",\"GLAZER\",\"GLAZERS\",\"GLINT\",\"HI\",\"HILA\",\"HILAR\",\"HILL\",\"HILLS\",\"HIN\",\"HINT\",\"ILL\",\"ILLS\",\"IN\",\"INAPT\",\"INCEPT\",\"INLACE\",\"INN\",\"LA\",\"LAC\",\"LACE\",\"LACER\",\"LACERS\",\"LANCE\",\"LANCER\",\"LANCERS\",\"LAP\",\"LAR\",\"LAREE\",\"LAREES\",\"LARES\",\"LARS\",\"LAZE\",\"LI\",\"LILAC\",\"LIN\",\"LINAC\",\"LINN\",\"LINT\",\"NA\",\"NAE\",\"NAP\",\"NAPE\",\"NARES\",\"NIL\",\"NILL\",\"NILLS\",\"NILS\",\"NTH\",\"OE\",\"OES\",\"OF\",\"OR\",\"ORA\",\"ORAL\",\"ORALS\",\"ORE\",\"ORES\",\"ORS\",\"OS\",\"OSE\",\"PA\",\"PAC\",\"PACE\",\"PACER\",\"PACERS\",\"PACT\",\"PAL\",\"PALL\",\"PALLS\",\"PALS\",\"PAN\",\"PANT\",\"PAR\",\"PARE\",\"PAREO\",\"PAREOS\",\"PARER\",\"PARES\",\"PARS\",\"PARSE\",\"PE\",\"PEA\",\"PEAL\",\"PEALS\",\"PEAN\",\"PEAR\",\"PEARS\",\"PEC\",\"PECAN\",\"PEE\",\"PEER\",\"PEERS\",\"PEES\",\"PER\",\"PERSE\",\"PERT\",\"PREACT\",\"PREE\",\"PREES\",\"PREZ\",\"RACE\",\"RACER\",\"RAN\",\"RANCE\",\"RANI\",\"RANT\",\"RAP\",\"RAPE\",\"RAPER\",\"RAPT\",\"RAZE\",\"RAZEE\",\"RAZEES\",\"RAZER\",\"RE\",\"REACT\",\"REAL\",\"REALS\",\"REAP\",\"REAPER\",\"REAPERS\",\"REAR\",\"REARS\",\"REC\",\"RECALL\",\"RECALLS\",\"RECANT\",\"RECAP\",\"REE\",\"REES\",\"REP\",\"RERAN\",\"REROSE\",\"RES\",\"ROE\",\"ROES\",\"ROSE\",\"SEE\",\"SEEP\",\"SEER\",\"SER\",\"SERA\",\"SERAC\",\"SERAL\",\"SERAPE\",\"SERE\",\"SERER\",\"SERF\",\"SLANT\",\"SLAP\",\"SO\",\"SORA\",\"SORE\",\"SORER\",\"THILL\",\"THILLS\",\"THIN\",\"TREE\",\"TREES\",\"TREPAN\",\"ZAP\",\"ZARF\",\"ZEAL\",\"ZEALS\",\"ZEE\",\"ZEES\",\"ZERO\",\"ZEROES\",\"ZEROS\"],game_state:true};_this2.handleChange=_this2.handleChange.bind(_assertThisInitialized(_this2));_this2.handleSubmit=_this2.handleSubmit.bind(_assertThisInitialized(_this2));_this2.handleStop=_this2.handleStop.bind(_assertThisInitialized(_this2));return _this2;}_createClass(BoggleGame,[{key:\"handleChange\",value:function handleChange(event){this.setState({input_word:event.target.value});}},{key:\"handleStop\",value:function handleStop(event){event.preventDefault();this.setState({game_state:false});}},{key:\"handleSubmit\",value:function handleSubmit(event){event.preventDefault();if(this.state.valid_words.includes(this.state.input_word)){alert(\"The word has already been found.\");}else if(//remove the word from this.state.valid_words\nthis.state.all_valid_words.includes(this.state.input_word.toUpperCase())){var new_valid_words=this.state.valid_words;new_valid_words.push(this.state.input_word);this.setState({valid_words:new_valid_words});var new_all_valid_words=this.state.all_valid_words;for(var i=0;i<new_all_valid_words.length;i++){if(new_all_valid_words[i]===this.state.input_word.toUpperCase()){new_all_valid_words.splice(i,1);}}this.setState({all_valid_words:new_all_valid_words});}else{alert(\"The word you have entered is invalid.\");}}},{key:\"ValidWord\",value:function ValidWord(){var valid_words=this.state.valid_words;var valid_words_list=valid_words.map(function(print_item){return React.createElement(\"li\",null,print_item);});return React.createElement(\"div\",null,React.createElement(\"ul\",null,\" \",valid_words_list,\" \"));}},{key:\"RemainingWord\",value:function RemainingWord(){var valid_words=this.state.valid_words;var all_words=this.state.all_valid_words;var remaining_words=[];for(var i=0;i<all_words.length;i++){var current_word=all_words[i];if(!valid_words.includes(current_word)){remaining_words.push(current_word);}}var remaining_words_list=remaining_words.map(function(print_item){return React.createElement(\"li\",null,print_item);});return React.createElement(\"div\",null,React.createElement(\"ul\",null,\" \",remaining_words_list,\" \"));}},{key:\"render\",value:function render(){if(this.state.game_state){return React.createElement(\"div\",null,React.createElement(\"div\",null,React.createElement(\"div\",null,React.createElement(\"form\",{onSubmit:this.handleSubmit},React.createElement(\"label\",null,\"Enter a word:\",React.createElement(\"input\",{type:\"text\",value:this.state.input_word,onChange:this.handleChange})),React.createElement(\"input\",{class:\"btn btn-primary\",type:\"submit\",value:\"Submit\"}))),React.createElement(\"div\",null,React.createElement(\"button\",{onClick:this.handleStop},\"Stop\"))),React.createElement(\"p\",null,\" Valid words list: \"),React.createElement(\"div\",null,this.ValidWord()));}else{return React.createElement(\"div\",null,React.createElement(\"p\",null,\" Valid words list: \"),React.createElement(\"div\",null,this.ValidWord()),React.createElement(\"p\",null,\" Remaining words list: \"),React.createElement(\"div\",null,this.RemainingWord()));}}}]);return BoggleGame;}(Component);","map":{"version":3,"sources":["/Users/swarnim/Desktop/boggle_app-master/src/Component/boggle.js"],"names":["React","Component","Boggle","props","state","show_grid","grid","handleSubmit","bind","event","setState","preventDefault","PrintGrid","BoggleGame","input_word","valid_words","all_valid_words","game_state","handleChange","handleStop","target","value","includes","alert","toUpperCase","new_valid_words","push","new_all_valid_words","i","length","splice","valid_words_list","map","print_item","all_words","remaining_words","current_word","remaining_words_list","ValidWord","RemainingWord"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass Boggle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show_grid: false,\n      grid: [\n        [\"T\", \"T\", \"N\", \"T\", \"D\"],\n        [\"H\", \"N\", \"C\", \"P\", \"R\"],\n        [\"I\", \"L\", \"A\", \"E\", \"E\"],\n        [\"G\", \"L\", \"Z\", \"R\", \"E\"],\n        [\"S\", \"R\", \"F\", \"O\", \"S\"]\n      ]\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  PrintGrid() {\n    const grid = this.state.grid;\n\n    return (\n      <div>\n        <div>\n          <div>\n            <button>{this.state.grid[0][0]}</button>\n            <button>{this.state.grid[0][1]}</button>\n            <button>{this.state.grid[0][2]}</button>\n            <button>{this.state.grid[0][3]}</button>\n            <button>{this.state.grid[0][4]}</button>\n          </div>\n          <div>\n            <button>{this.state.grid[1][0]}</button>\n            <button>{this.state.grid[1][1]}</button>\n            <button>{this.state.grid[1][2]}</button>\n            <button>{this.state.grid[1][3]}</button>\n            <button>{this.state.grid[1][4]}</button>\n          </div>\n          <div>\n            <button>{this.state.grid[2][0]}</button>\n            <button>{this.state.grid[2][1]}</button>\n            <button>{this.state.grid[2][2]}</button>\n            <button>{this.state.grid[2][3]}</button>\n            <button>{this.state.grid[2][4]}</button>\n          </div>\n          <div>\n            <button>{this.state.grid[3][0]}</button>\n            <button>{this.state.grid[3][1]}</button>\n            <button>{this.state.grid[3][2]}</button>\n            <button>{this.state.grid[3][3]}</button>\n            <button>{this.state.grid[3][4]}</button>\n          </div>\n          <div>\n            <button>{this.state.grid[4][0]}</button>\n            <button>{this.state.grid[4][1]}</button>\n            <button>{this.state.grid[4][2]}</button>\n            <button>{this.state.grid[4][3]}</button>\n            <button>{this.state.grid[4][4]}</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  handleSubmit(event) {\n    this.setState({ show_grid: true });\n    event.preventDefault();\n  }\n\n  render() {\n    if (this.state.show_grid) {\n      return (\n        <div>\n          <div>{this.PrintGrid()}</div>\n          <BoggleGame></BoggleGame>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <button onClick={this.handleSubmit}>Start</button>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Boggle;\n\nclass BoggleGame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input_word: \"\",\n      valid_words: [],\n      all_valid_words: [\n        \"ACE\",\n        \"ACEROSE\",\n        \"ACT\",\n        \"AE\",\n        \"AERO \",\n        \"AL\",\n        \"ALGIN\",\n        \"ALL\",\n        \"ALLS\",\n        \"ALS\",\n        \"AN\",\n        \"ANI\",\n        \"ANIL\",\n        \"ANILS\",\n        \"ANT\",\n        \"ANTHILL\",\n        \"ANTHILLS\",\n        \"APE\",\n        \"APER\",\n        \"APERS\",\n        \"APT\",\n        \"AR\",\n        \"ARE\",\n        \"ARES\",\n        \"ARF\",\n        \"AROSE\",\n        \"ARS\",\n        \"ARSE\",\n        \"AZO\",\n        \"CALF\",\n        \"CALL\",\n        \"CALLS\",\n        \"CAN\",\n        \"CANT\",\n        \"CANTHI\",\n        \"CAP\",\n        \"CAPE\",\n        \"CAPER\",\n        \"CAPERER\",\n        \"CAPERERS\",\n        \"CAPERS\",\n        \"CAR\",\n        \"CARE\",\n        \"CAREER\",\n        \"CARER\",\n        \"CARES\",\n        \"CARS\",\n        \"CARSE\",\n        \"CEE\",\n        \"CEES\",\n        \"CEP\",\n        \"CEPE\",\n        \"CERE\",\n        \"CERES\",\n        \"CERO\",\n        \"CEROS\",\n        \"CLAN\",\n        \"CLAP\",\n        \"CLAPT\",\n        \"CLARO\",\n        \"CLAROES\",\n        \"CLAROS\",\n        \"CLINAL\",\n        \"DREAR\",\n        \"DREARS\",\n        \"DREE\",\n        \"DREES\",\n        \"EAR\",\n        \"EARS\",\n        \"EPACT\",\n        \"EPEE\",\n        \"EPEES\",\n        \"ER\",\n        \"ERA\",\n        \"ERE\",\n        \"ERECT\",\n        \"EROS\",\n        \"EROSE\",\n        \"ERS\",\n        \"ES\",\n        \"FLAN\",\n        \"FLAP\",\n        \"FLARE\",\n        \"FLARES\",\n        \"FLINT\",\n        \"FOE\",\n        \"FOES\",\n        \"FOR\",\n        \"FORA\",\n        \"FORE\",\n        \"FORES\",\n        \"FRAE\",\n        \"FRANC\",\n        \"FRAP\",\n        \"FREE\",\n        \"FREER\",\n        \"FREES\",\n        \"FRERE\",\n        \"FRO\",\n        \"FROE\",\n        \"FROES\",\n        \"FROZE\",\n        \"GILL\",\n        \"GILLS\",\n        \"GIN\",\n        \"GLACE\",\n        \"GLANCE\",\n        \"GLANCER\",\n        \"GLANCERS\",\n        \"GLARE\",\n        \"GLARES\",\n        \"GLAZE\",\n        \"GLAZER\",\n        \"GLAZERS\",\n        \"GLINT\",\n        \"HI\",\n        \"HILA\",\n        \"HILAR\",\n        \"HILL\",\n        \"HILLS\",\n        \"HIN\",\n        \"HINT\",\n        \"ILL\",\n        \"ILLS\",\n        \"IN\",\n        \"INAPT\",\n        \"INCEPT\",\n        \"INLACE\",\n        \"INN\",\n        \"LA\",\n        \"LAC\",\n        \"LACE\",\n        \"LACER\",\n        \"LACERS\",\n        \"LANCE\",\n        \"LANCER\",\n        \"LANCERS\",\n        \"LAP\",\n        \"LAR\",\n        \"LAREE\",\n        \"LAREES\",\n        \"LARES\",\n        \"LARS\",\n        \"LAZE\",\n        \"LI\",\n        \"LILAC\",\n        \"LIN\",\n        \"LINAC\",\n        \"LINN\",\n        \"LINT\",\n        \"NA\",\n        \"NAE\",\n        \"NAP\",\n        \"NAPE\",\n        \"NARES\",\n        \"NIL\",\n        \"NILL\",\n        \"NILLS\",\n        \"NILS\",\n        \"NTH\",\n        \"OE\",\n        \"OES\",\n        \"OF\",\n        \"OR\",\n        \"ORA\",\n        \"ORAL\",\n        \"ORALS\",\n        \"ORE\",\n        \"ORES\",\n        \"ORS\",\n        \"OS\",\n        \"OSE\",\n        \"PA\",\n        \"PAC\",\n        \"PACE\",\n        \"PACER\",\n        \"PACERS\",\n        \"PACT\",\n        \"PAL\",\n        \"PALL\",\n        \"PALLS\",\n        \"PALS\",\n        \"PAN\",\n        \"PANT\",\n        \"PAR\",\n        \"PARE\",\n        \"PAREO\",\n        \"PAREOS\",\n        \"PARER\",\n        \"PARES\",\n        \"PARS\",\n        \"PARSE\",\n        \"PE\",\n        \"PEA\",\n        \"PEAL\",\n        \"PEALS\",\n        \"PEAN\",\n        \"PEAR\",\n        \"PEARS\",\n        \"PEC\",\n        \"PECAN\",\n        \"PEE\",\n        \"PEER\",\n        \"PEERS\",\n        \"PEES\",\n        \"PER\",\n        \"PERSE\",\n        \"PERT\",\n        \"PREACT\",\n        \"PREE\",\n        \"PREES\",\n        \"PREZ\",\n        \"RACE\",\n        \"RACER\",\n        \"RAN\",\n        \"RANCE\",\n        \"RANI\",\n        \"RANT\",\n        \"RAP\",\n        \"RAPE\",\n        \"RAPER\",\n        \"RAPT\",\n        \"RAZE\",\n        \"RAZEE\",\n        \"RAZEES\",\n        \"RAZER\",\n        \"RE\",\n        \"REACT\",\n        \"REAL\",\n        \"REALS\",\n        \"REAP\",\n        \"REAPER\",\n        \"REAPERS\",\n        \"REAR\",\n        \"REARS\",\n        \"REC\",\n        \"RECALL\",\n        \"RECALLS\",\n        \"RECANT\",\n        \"RECAP\",\n        \"REE\",\n        \"REES\",\n        \"REP\",\n        \"RERAN\",\n        \"REROSE\",\n        \"RES\",\n        \"ROE\",\n        \"ROES\",\n        \"ROSE\",\n        \"SEE\",\n        \"SEEP\",\n        \"SEER\",\n        \"SER\",\n        \"SERA\",\n        \"SERAC\",\n        \"SERAL\",\n        \"SERAPE\",\n        \"SERE\",\n        \"SERER\",\n        \"SERF\",\n        \"SLANT\",\n        \"SLAP\",\n        \"SO\",\n        \"SORA\",\n        \"SORE\",\n        \"SORER\",\n        \"THILL\",\n        \"THILLS\",\n        \"THIN\",\n        \"TREE\",\n        \"TREES\",\n        \"TREPAN\",\n        \"ZAP\",\n        \"ZARF\",\n        \"ZEAL\",\n        \"ZEALS\",\n        \"ZEE\",\n        \"ZEES\",\n        \"ZERO\",\n        \"ZEROES\",\n        \"ZEROS\"\n      ],\n      game_state: true\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleStop = this.handleStop.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ input_word: event.target.value });\n  }\n\n  handleStop(event) {\n    event.preventDefault();\n    this.setState({ game_state: false });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (this.state.valid_words.includes(this.state.input_word)) {\n      alert(\"The word has already been found.\");\n    } else if (\n      //remove the word from this.state.valid_words\n      this.state.all_valid_words.includes(this.state.input_word.toUpperCase())\n    ) {\n      var new_valid_words = this.state.valid_words;\n      new_valid_words.push(this.state.input_word);\n      this.setState({ valid_words: new_valid_words });\n      var new_all_valid_words = this.state.all_valid_words;\n      for (var i = 0; i < new_all_valid_words.length; i++) {\n        if (new_all_valid_words[i] === this.state.input_word.toUpperCase()) {\n          new_all_valid_words.splice(i, 1);\n        }\n      }\n      this.setState({ all_valid_words: new_all_valid_words });\n    } else {\n      alert(\"The word you have entered is invalid.\");\n    }\n  }\n\n  ValidWord() {\n    const valid_words = this.state.valid_words;\n    const valid_words_list = valid_words.map(print_item => (\n      <li>{print_item}</li>\n    ));\n    return (\n      <div>\n        <ul> {valid_words_list} </ul>\n      </div>\n    );\n  }\n\n  RemainingWord() {\n    var valid_words = this.state.valid_words;\n    var all_words = this.state.all_valid_words;\n    var remaining_words = [];\n\n    for (var i = 0; i < all_words.length; i++) {\n      var current_word = all_words[i];\n      if (!valid_words.includes(current_word)) {\n        remaining_words.push(current_word);\n      }\n    }\n    const remaining_words_list = remaining_words.map(print_item => (\n      <li>{print_item}</li>\n    ));\n    return (\n      <div>\n        <ul> {remaining_words_list} </ul>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.state.game_state) {\n      return (\n        <div>\n          <div>\n            <div>\n              <form onSubmit={this.handleSubmit}>\n                <label>\n                  Enter a word:\n                  <input\n                    type=\"text\"\n                    value={this.state.input_word}\n                    onChange={this.handleChange}\n                  />\n                </label>\n                <input class=\"btn btn-primary\" type=\"submit\" value=\"Submit\" />\n              </form>\n            </div>\n            <div>\n              <button onClick={this.handleStop}>Stop</button>\n            </div>\n          </div>\n          <p> Valid words list: </p>\n          <div>{this.ValidWord()}</div>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <p> Valid words list: </p>\n          <div>{this.ValidWord()}</div>\n          <p> Remaining words list: </p>\n          <div>{this.RemainingWord()}</div>\n        </div>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}