{"ast":null,"code":"var _jsxFileName = \"/Users/swarnim/Desktop/boggle_app-master/src/boggle.js\";\nimport React, { Component } from \"react\";\nimport { db } from \"./firebase\";\n\nclass Boggle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      load_challenge: false,\n      show_grid: false,\n      grid: \"abcde\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  GettheGrid() {\n    var girdssssss = db.collection(\"grid\").doc(\"CWzx6Xzk7a6RC91voh5S\").get().then(function (snap) {\n      if (snap.exists) {\n        console.log(snap.data());\n        this.setState({\n          grid: girdssssss\n        });\n      }\n    });\n  }\n\n  PrintGrid() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, this.state.grid[0]), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.state.grid[0]), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.state.grid[0]), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.state.grid[0]), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.state.grid[0]))));\n  }\n\n  handleSubmit(event) {\n    this.setState({\n      load_challenge: true\n    });\n    event.preventDefault();\n  }\n\n  handleChange(event) {\n    this.setState({\n      show_grid: true\n    });\n    event.preventDefault();\n  }\n\n  render() {\n    if (this.state.load_challenge) {\n      if (this.state.show_grid) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, this.PrintGrid()), React.createElement(BoggleGame, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \" Load Challenge 1\"), React.createElement(\"button\", {\n          onClick: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, \"Load Challenge\"), React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \" Load Challenge 2\"), React.createElement(\"button\", {\n          onClick: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \"Load Challenge\"), React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \" Load Challenge 3\"), React.createElement(\"button\", {\n          onClick: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"Load Challenge\"));\n      }\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Load Challenge\"));\n    }\n  }\n\n}\n\nexport default Boggle;\n\nclass BoggleGame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input_word: \"\",\n      valid_words: [],\n      all_valid_words: [\"ACE\", \"ACEROSE\", \"ACT\", \"AE\", \"AERO \", \"AL\", \"ALGIN\", \"ALL\", \"ALLS\", \"ALS\", \"AN\", \"ANI\", \"ANIL\", \"ANILS\", \"ANT\", \"ANTHILL\", \"ANTHILLS\", \"APE\", \"APER\", \"APERS\", \"APT\", \"AR\", \"ARE\", \"ARES\", \"ARF\", \"AROSE\", \"ARS\", \"ARSE\", \"AZO\", \"CALF\", \"CALL\", \"CALLS\", \"CAN\", \"CANT\", \"CANTHI\", \"CAP\", \"CAPE\", \"CAPER\", \"CAPERER\", \"CAPERERS\", \"CAPERS\", \"CAR\", \"CARE\", \"CAREER\", \"CARER\", \"CARES\", \"CARS\", \"CARSE\", \"CEE\", \"CEES\", \"CEP\", \"CEPE\", \"CERE\", \"CERES\", \"CERO\", \"CEROS\", \"CLAN\", \"CLAP\", \"CLAPT\", \"CLARO\", \"CLAROES\", \"CLAROS\", \"CLINAL\", \"DREAR\", \"DREARS\", \"DREE\", \"DREES\", \"EAR\", \"EARS\", \"EPACT\", \"EPEE\", \"EPEES\", \"ER\", \"ERA\", \"ERE\", \"ERECT\", \"EROS\", \"EROSE\", \"ERS\", \"ES\", \"FLAN\", \"FLAP\", \"FLARE\", \"FLARES\", \"FLINT\", \"FOE\", \"FOES\", \"FOR\", \"FORA\", \"FORE\", \"FORES\", \"FRAE\", \"FRANC\", \"FRAP\", \"FREE\", \"FREER\", \"FREES\", \"FRERE\", \"FRO\", \"FROE\", \"FROES\", \"FROZE\", \"GILL\", \"GILLS\", \"GIN\", \"GLACE\", \"GLANCE\", \"GLANCER\", \"GLANCERS\", \"GLARE\", \"GLARES\", \"GLAZE\", \"GLAZER\", \"GLAZERS\", \"GLINT\", \"HI\", \"HILA\", \"HILAR\", \"HILL\", \"HILLS\", \"HIN\", \"HINT\", \"ILL\", \"ILLS\", \"IN\", \"INAPT\", \"INCEPT\", \"INLACE\", \"INN\", \"LA\", \"LAC\", \"LACE\", \"LACER\", \"LACERS\", \"LANCE\", \"LANCER\", \"LANCERS\", \"LAP\", \"LAR\", \"LAREE\", \"LAREES\", \"LARES\", \"LARS\", \"LAZE\", \"LI\", \"LILAC\", \"LIN\", \"LINAC\", \"LINN\", \"LINT\", \"NA\", \"NAE\", \"NAP\", \"NAPE\", \"NARES\", \"NIL\", \"NILL\", \"NILLS\", \"NILS\", \"NTH\", \"OE\", \"OES\", \"OF\", \"OR\", \"ORA\", \"ORAL\", \"ORALS\", \"ORE\", \"ORES\", \"ORS\", \"OS\", \"OSE\", \"PA\", \"PAC\", \"PACE\", \"PACER\", \"PACERS\", \"PACT\", \"PAL\", \"PALL\", \"PALLS\", \"PALS\", \"PAN\", \"PANT\", \"PAR\", \"PARE\", \"PAREO\", \"PAREOS\", \"PARER\", \"PARES\", \"PARS\", \"PARSE\", \"PE\", \"PEA\", \"PEAL\", \"PEALS\", \"PEAN\", \"PEAR\", \"PEARS\", \"PEC\", \"PECAN\", \"PEE\", \"PEER\", \"PEERS\", \"PEES\", \"PER\", \"PERSE\", \"PERT\", \"PREACT\", \"PREE\", \"PREES\", \"PREZ\", \"RACE\", \"RACER\", \"RAN\", \"RANCE\", \"RANI\", \"RANT\", \"RAP\", \"RAPE\", \"RAPER\", \"RAPT\", \"RAZE\", \"RAZEE\", \"RAZEES\", \"RAZER\", \"RE\", \"REACT\", \"REAL\", \"REALS\", \"REAP\", \"REAPER\", \"REAPERS\", \"REAR\", \"REARS\", \"REC\", \"RECALL\", \"RECALLS\", \"RECANT\", \"RECAP\", \"REE\", \"REES\", \"REP\", \"RERAN\", \"REROSE\", \"RES\", \"ROE\", \"ROES\", \"ROSE\", \"SEE\", \"SEEP\", \"SEER\", \"SER\", \"SERA\", \"SERAC\", \"SERAL\", \"SERAPE\", \"SERE\", \"SERER\", \"SERF\", \"SLANT\", \"SLAP\", \"SO\", \"SORA\", \"SORE\", \"SORER\", \"THILL\", \"THILLS\", \"THIN\", \"TREE\", \"TREES\", \"TREPAN\", \"ZAP\", \"ZARF\", \"ZEAL\", \"ZEALS\", \"ZEE\", \"ZEES\", \"ZERO\", \"ZEROES\", \"ZEROS\"],\n      game_state: true\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleStop = this.handleStop.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      input_word: event.target.value\n    });\n  }\n\n  handleStop(event) {\n    event.preventDefault();\n    this.setState({\n      game_state: false\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (this.state.valid_words.includes(this.state.input_word)) {\n      alert(\"The word has already been found.\");\n    } else if ( //remove the word from this.state.valid_words\n    this.state.all_valid_words.includes(this.state.input_word.toUpperCase())) {\n      var new_valid_words = this.state.valid_words;\n      new_valid_words.push(this.state.input_word);\n      this.setState({\n        valid_words: new_valid_words\n      });\n      var new_all_valid_words = this.state.all_valid_words;\n\n      for (var i = 0; i < new_all_valid_words.length; i++) {\n        if (new_all_valid_words[i] === this.state.input_word.toUpperCase()) {\n          new_all_valid_words.splice(i, 1);\n        }\n      }\n\n      this.setState({\n        all_valid_words: new_all_valid_words\n      });\n    } else {\n      alert(\"The word you have entered is invalid.\");\n    }\n  }\n\n  ValidWord() {\n    const valid_words = this.state.valid_words;\n    const valid_words_list = valid_words.map(print_item => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }, print_item));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, \" \", valid_words_list, \" \"));\n  }\n\n  RemainingWord() {\n    var valid_words = this.state.valid_words;\n    var all_words = this.state.all_valid_words;\n    var remaining_words = [];\n\n    for (var i = 0; i < all_words.length; i++) {\n      var current_word = all_words[i];\n\n      if (!valid_words.includes(current_word)) {\n        remaining_words.push(current_word);\n      }\n    }\n\n    const remaining_words_list = remaining_words.map(print_item => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }, print_item));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, \" \", remaining_words_list, \" \"));\n  }\n\n  render() {\n    if (this.state.game_state) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458\n        },\n        __self: this\n      }, \"Enter a word:\", React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.input_word,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        class: \"btn btn-primary\",\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.handleStop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, \"Stop\"))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }, \" Valid words list: \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }, this.ValidWord()));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        },\n        __self: this\n      }, \" Valid words list: \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }, this.ValidWord()), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }, \" Remaining words list: \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, this.RemainingWord()));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/swarnim/Desktop/boggle_app-master/src/boggle.js"],"names":["React","Component","db","Boggle","constructor","props","state","load_challenge","show_grid","grid","handleSubmit","bind","handleChange","GettheGrid","girdssssss","collection","doc","get","then","snap","exists","console","log","data","setState","PrintGrid","event","preventDefault","render","BoggleGame","input_word","valid_words","all_valid_words","game_state","handleStop","target","value","includes","alert","toUpperCase","new_valid_words","push","new_all_valid_words","i","length","splice","ValidWord","valid_words_list","map","print_item","RemainingWord","all_words","remaining_words","current_word","remaining_words_list"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { db } from \"./firebase\";\n\nclass Boggle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      load_challenge: false,\n      show_grid: false,\n      grid: \"abcde\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  GettheGrid() {\n    var girdssssss = db\n      .collection(\"grid\")\n      .doc(\"CWzx6Xzk7a6RC91voh5S\")\n      .get()\n      .then(function(snap) {\n        if (snap.exists) {\n          console.log(snap.data());\n          this.setState({ grid: girdssssss });\n        }\n      });\n  }\n\n  PrintGrid() {\n    return (\n      <div>\n        <div>\n          <div>\n            <button>{this.state.grid[0]}</button>\n            <button>{this.state.grid[0]}</button>\n            <button>{this.state.grid[0]}</button>\n            <button>{this.state.grid[0]}</button>\n            <button>{this.state.grid[0]}</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  handleSubmit(event) {\n    this.setState({ load_challenge: true });\n    event.preventDefault();\n  }\n\n  handleChange(event) {\n    this.setState({ show_grid: true });\n    event.preventDefault();\n  }\n\n  render() {\n    if (this.state.load_challenge) {\n      if (this.state.show_grid) {\n        return (\n          <div>\n            <div>{this.PrintGrid()}</div>\n            <BoggleGame></BoggleGame>\n          </div>\n        );\n      } else {\n        return (\n          <div>\n            <h1> Load Challenge 1</h1>\n            <button onClick={this.handleChange}>Load Challenge</button>\n            <h1> Load Challenge 2</h1>\n            <button onClick={this.handleChange}>Load Challenge</button>\n            <h1> Load Challenge 3</h1>\n            <button onClick={this.handleChange}>Load Challenge</button>\n          </div>\n        );\n      }\n    } else {\n      return (\n        <div>\n          <button onClick={this.handleSubmit}>Load Challenge</button>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Boggle;\n\nclass BoggleGame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input_word: \"\",\n      valid_words: [],\n      all_valid_words: [\n        \"ACE\",\n        \"ACEROSE\",\n        \"ACT\",\n        \"AE\",\n        \"AERO \",\n        \"AL\",\n        \"ALGIN\",\n        \"ALL\",\n        \"ALLS\",\n        \"ALS\",\n        \"AN\",\n        \"ANI\",\n        \"ANIL\",\n        \"ANILS\",\n        \"ANT\",\n        \"ANTHILL\",\n        \"ANTHILLS\",\n        \"APE\",\n        \"APER\",\n        \"APERS\",\n        \"APT\",\n        \"AR\",\n        \"ARE\",\n        \"ARES\",\n        \"ARF\",\n        \"AROSE\",\n        \"ARS\",\n        \"ARSE\",\n        \"AZO\",\n        \"CALF\",\n        \"CALL\",\n        \"CALLS\",\n        \"CAN\",\n        \"CANT\",\n        \"CANTHI\",\n        \"CAP\",\n        \"CAPE\",\n        \"CAPER\",\n        \"CAPERER\",\n        \"CAPERERS\",\n        \"CAPERS\",\n        \"CAR\",\n        \"CARE\",\n        \"CAREER\",\n        \"CARER\",\n        \"CARES\",\n        \"CARS\",\n        \"CARSE\",\n        \"CEE\",\n        \"CEES\",\n        \"CEP\",\n        \"CEPE\",\n        \"CERE\",\n        \"CERES\",\n        \"CERO\",\n        \"CEROS\",\n        \"CLAN\",\n        \"CLAP\",\n        \"CLAPT\",\n        \"CLARO\",\n        \"CLAROES\",\n        \"CLAROS\",\n        \"CLINAL\",\n        \"DREAR\",\n        \"DREARS\",\n        \"DREE\",\n        \"DREES\",\n        \"EAR\",\n        \"EARS\",\n        \"EPACT\",\n        \"EPEE\",\n        \"EPEES\",\n        \"ER\",\n        \"ERA\",\n        \"ERE\",\n        \"ERECT\",\n        \"EROS\",\n        \"EROSE\",\n        \"ERS\",\n        \"ES\",\n        \"FLAN\",\n        \"FLAP\",\n        \"FLARE\",\n        \"FLARES\",\n        \"FLINT\",\n        \"FOE\",\n        \"FOES\",\n        \"FOR\",\n        \"FORA\",\n        \"FORE\",\n        \"FORES\",\n        \"FRAE\",\n        \"FRANC\",\n        \"FRAP\",\n        \"FREE\",\n        \"FREER\",\n        \"FREES\",\n        \"FRERE\",\n        \"FRO\",\n        \"FROE\",\n        \"FROES\",\n        \"FROZE\",\n        \"GILL\",\n        \"GILLS\",\n        \"GIN\",\n        \"GLACE\",\n        \"GLANCE\",\n        \"GLANCER\",\n        \"GLANCERS\",\n        \"GLARE\",\n        \"GLARES\",\n        \"GLAZE\",\n        \"GLAZER\",\n        \"GLAZERS\",\n        \"GLINT\",\n        \"HI\",\n        \"HILA\",\n        \"HILAR\",\n        \"HILL\",\n        \"HILLS\",\n        \"HIN\",\n        \"HINT\",\n        \"ILL\",\n        \"ILLS\",\n        \"IN\",\n        \"INAPT\",\n        \"INCEPT\",\n        \"INLACE\",\n        \"INN\",\n        \"LA\",\n        \"LAC\",\n        \"LACE\",\n        \"LACER\",\n        \"LACERS\",\n        \"LANCE\",\n        \"LANCER\",\n        \"LANCERS\",\n        \"LAP\",\n        \"LAR\",\n        \"LAREE\",\n        \"LAREES\",\n        \"LARES\",\n        \"LARS\",\n        \"LAZE\",\n        \"LI\",\n        \"LILAC\",\n        \"LIN\",\n        \"LINAC\",\n        \"LINN\",\n        \"LINT\",\n        \"NA\",\n        \"NAE\",\n        \"NAP\",\n        \"NAPE\",\n        \"NARES\",\n        \"NIL\",\n        \"NILL\",\n        \"NILLS\",\n        \"NILS\",\n        \"NTH\",\n        \"OE\",\n        \"OES\",\n        \"OF\",\n        \"OR\",\n        \"ORA\",\n        \"ORAL\",\n        \"ORALS\",\n        \"ORE\",\n        \"ORES\",\n        \"ORS\",\n        \"OS\",\n        \"OSE\",\n        \"PA\",\n        \"PAC\",\n        \"PACE\",\n        \"PACER\",\n        \"PACERS\",\n        \"PACT\",\n        \"PAL\",\n        \"PALL\",\n        \"PALLS\",\n        \"PALS\",\n        \"PAN\",\n        \"PANT\",\n        \"PAR\",\n        \"PARE\",\n        \"PAREO\",\n        \"PAREOS\",\n        \"PARER\",\n        \"PARES\",\n        \"PARS\",\n        \"PARSE\",\n        \"PE\",\n        \"PEA\",\n        \"PEAL\",\n        \"PEALS\",\n        \"PEAN\",\n        \"PEAR\",\n        \"PEARS\",\n        \"PEC\",\n        \"PECAN\",\n        \"PEE\",\n        \"PEER\",\n        \"PEERS\",\n        \"PEES\",\n        \"PER\",\n        \"PERSE\",\n        \"PERT\",\n        \"PREACT\",\n        \"PREE\",\n        \"PREES\",\n        \"PREZ\",\n        \"RACE\",\n        \"RACER\",\n        \"RAN\",\n        \"RANCE\",\n        \"RANI\",\n        \"RANT\",\n        \"RAP\",\n        \"RAPE\",\n        \"RAPER\",\n        \"RAPT\",\n        \"RAZE\",\n        \"RAZEE\",\n        \"RAZEES\",\n        \"RAZER\",\n        \"RE\",\n        \"REACT\",\n        \"REAL\",\n        \"REALS\",\n        \"REAP\",\n        \"REAPER\",\n        \"REAPERS\",\n        \"REAR\",\n        \"REARS\",\n        \"REC\",\n        \"RECALL\",\n        \"RECALLS\",\n        \"RECANT\",\n        \"RECAP\",\n        \"REE\",\n        \"REES\",\n        \"REP\",\n        \"RERAN\",\n        \"REROSE\",\n        \"RES\",\n        \"ROE\",\n        \"ROES\",\n        \"ROSE\",\n        \"SEE\",\n        \"SEEP\",\n        \"SEER\",\n        \"SER\",\n        \"SERA\",\n        \"SERAC\",\n        \"SERAL\",\n        \"SERAPE\",\n        \"SERE\",\n        \"SERER\",\n        \"SERF\",\n        \"SLANT\",\n        \"SLAP\",\n        \"SO\",\n        \"SORA\",\n        \"SORE\",\n        \"SORER\",\n        \"THILL\",\n        \"THILLS\",\n        \"THIN\",\n        \"TREE\",\n        \"TREES\",\n        \"TREPAN\",\n        \"ZAP\",\n        \"ZARF\",\n        \"ZEAL\",\n        \"ZEALS\",\n        \"ZEE\",\n        \"ZEES\",\n        \"ZERO\",\n        \"ZEROES\",\n        \"ZEROS\"\n      ],\n      game_state: true\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleStop = this.handleStop.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ input_word: event.target.value });\n  }\n\n  handleStop(event) {\n    event.preventDefault();\n    this.setState({ game_state: false });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (this.state.valid_words.includes(this.state.input_word)) {\n      alert(\"The word has already been found.\");\n    } else if (\n      //remove the word from this.state.valid_words\n      this.state.all_valid_words.includes(this.state.input_word.toUpperCase())\n    ) {\n      var new_valid_words = this.state.valid_words;\n      new_valid_words.push(this.state.input_word);\n      this.setState({ valid_words: new_valid_words });\n      var new_all_valid_words = this.state.all_valid_words;\n      for (var i = 0; i < new_all_valid_words.length; i++) {\n        if (new_all_valid_words[i] === this.state.input_word.toUpperCase()) {\n          new_all_valid_words.splice(i, 1);\n        }\n      }\n      this.setState({ all_valid_words: new_all_valid_words });\n    } else {\n      alert(\"The word you have entered is invalid.\");\n    }\n  }\n\n  ValidWord() {\n    const valid_words = this.state.valid_words;\n    const valid_words_list = valid_words.map(print_item => (\n      <li>{print_item}</li>\n    ));\n    return (\n      <div>\n        <ul> {valid_words_list} </ul>\n      </div>\n    );\n  }\n\n  RemainingWord() {\n    var valid_words = this.state.valid_words;\n    var all_words = this.state.all_valid_words;\n    var remaining_words = [];\n\n    for (var i = 0; i < all_words.length; i++) {\n      var current_word = all_words[i];\n      if (!valid_words.includes(current_word)) {\n        remaining_words.push(current_word);\n      }\n    }\n    const remaining_words_list = remaining_words.map(print_item => (\n      <li>{print_item}</li>\n    ));\n    return (\n      <div>\n        <ul> {remaining_words_list} </ul>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.state.game_state) {\n      return (\n        <div>\n          <div>\n            <div>\n              <form onSubmit={this.handleSubmit}>\n                <label>\n                  Enter a word:\n                  <input\n                    type=\"text\"\n                    value={this.state.input_word}\n                    onChange={this.handleChange}\n                  />\n                </label>\n                <input class=\"btn btn-primary\" type=\"submit\" value=\"Submit\" />\n              </form>\n            </div>\n            <div>\n              <button onClick={this.handleStop}>Stop</button>\n            </div>\n          </div>\n          <p> Valid words list: </p>\n          <div>{this.ValidWord()}</div>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <p> Valid words list: </p>\n          <div>{this.ValidWord()}</div>\n          <p> Remaining words list: </p>\n          <div>{this.RemainingWord()}</div>\n        </div>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}